apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-logging
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"fluentd-logging-clusterrole"},"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["get","watch","list"]}]}
  creationTimestamp: "2022-01-25T21:39:48Z"
  name: fluentd-logging-clusterrole
  resourceVersion: "37942728"
  uid: 821852fd-b0a4-4ccf-8f91-4936c0a206d2
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - watch
  - list

---


apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"fluentd-logging-clusterrolebinding"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"fluentd-logging-clusterrole"},"subjects":[{"kind":"ServiceAccount","name":"fluentd-logging","namespace":"kube-system"}]}
  creationTimestamp: "2022-01-25T21:40:03Z"
  name: fluentd-logging-clusterrolebinding
  resourceVersion: "37942855"
  uid: b1068e02-b4af-4b99-901c-0b5490b9cb23
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-logging-clusterrole
subjects:
- kind: ServiceAccount
  name: fluentd-logging
  namespace: kube-system

---

apiVersion: v1
data:
  AWS_S3_BUCKET_NAME: jadeuc-logs-source
  AWS_S3_LOGS_BUCKET_PREFIX: jadeuc-tooling-logs/
  AWS_S3_LOGS_BUCKET_PREFIX_KUBESYSTEM: jadeuc-tooling-logs/
  AWS_S3_LOGS_BUCKET_REGION: us-east-1
  fluent_s3.conf: "# Example:\n# {\"log\":\"[info:2016-02-16T16:04:05.930-08:00] Some
    log text here\\n\",\"stream\":\"stdout\",\"time\":\"2016-02-17T00:04:05.931087621Z\"}\n<source>\n
    \ type tail\n  path /var/log/containers/*.log\n  pos_file /var/log/fluentd-containers.log.pos\n
    \ time_format %Y-%m-%dT%H:%M:%S.%NZ\n  tag kubernetes.*\n  format json\n  read_from_head
    true\n</source>\n\n# Query the API for extra metadata.\n<filter kubernetes.**>\n
    \ type kubernetes_metadata\n  # If the logs begin with '{' and end with '}' then
    it's JSON so merge\n  # the JSON log field into the log event\n  merge_json_log
    true\n  preserve_json_log true\n</filter>\n\n# rewrite_tag_filter does not support
    nested fields like\n# kubernetes.container_name, so this exists to flatten the
    fields\n# so we can use them in our rewrite_tag_filter\n<filter kubernetes.**>\n
    \ @type record_transformer\n  enable_ruby true\n  <record>\n    # kubernetes_namespace_container_name
    ${record[\"kubernetes\"][\"namespace_name\"]}.${record[\"kubernetes\"][\"container_name\"]}\n
    \   kubernetes_namespace_container_name ${record[\"kubernetes\"][\"namespace_name\"]}\n
    \ </record>\n</filter>\n\n# retag based on the namespace and container name of
    the log message\n<match kubernetes.**>\n  @type rewrite_tag_filter\n  # Update
    the tag have a structure of kube.<namespace>.<containername>\n  rewriterule1 kubernetes_namespace_container_name
    \ ^(.+)$ kube.$1\n</match>\n\n# Remove the unnecessary field as the information
    is already available on\n# other fields.\n<filter kube.**>\n  @type record_transformer\n
    \ remove_keys kubernetes_namespace_container_name\n</filter>\n\n# Parse logs in
    the kube-system namespace using the kubernetes formatter.\n<filter kube.kube-system.**>\n
    \ type parser\n  format kubernetes\n  reserve_data true\n  key_name log\n  suppress_parse_error_log
    true\n</filter>\n\n# Example:\n# 2015-12-21 23:17:22,066 [salt.state       ][INFO
    \   ] Completed state [net.ipv4.ip_forward] at time 23:17:22.066081\n<source>\n
    \ type tail\n  format /^(?<time>[^ ]* [^ ,]*)[^\\[]*\\[[^\\]]*\\]\\[(?<severity>[^
    \\]]*) *\\] (?<message>.*)$/\n  time_format %Y-%m-%d %H:%M:%S\n  path /var/log/salt/minion\n
    \ pos_file /var/log/fluentd-salt.pos\n  tag salt\n</source>\n\n# CoreOS System
    Logs\n<source>\n  @type systemd\n  path /var/log/journal\n  pos_file /var/log/fluentd-coreos.pos\n
    \ tag coreos\n  read_from_head true\n  strip_underscores true\n</source>\n\n#
    Example:\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished
    running startup script /var/run/google.startup.script\n<source>\n  type tail\n
    \ format syslog\n  path /var/log/startupscript.log\n  pos_file /var/log/fluentd-startupscript.log.pos\n
    \ tag startupscript\n</source>\n\n# Examples:\n# time=\"2016-02-04T06:51:03.053580605Z\"
    level=info msg=\"GET /containers/json\"\n# time=\"2016-02-04T07:53:57.505612354Z\"
    level=error msg=\"HTTP Error\" err=\"No such image: -f\" statusCode=404\n<source>\n
    \ type tail\n  format /^time=\"(?<time>[^)]*)\" level=(?<severity>[^ ]*) msg=\"(?<message>[^\"]*)\"(
    err=\"(?<error>[^\"]*)\")?( statusCode=($<status_code>\\d+))?/\n  path /var/log/docker.log\n
    \ pos_file /var/log/fluentd-docker.log.pos\n  tag docker\n</source>\n\n# Example:\n#
    2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\n<source>\n
    \ type tail\n  # Not parsing this, because it doesn't have anything particularly
    useful to\n  # parse out of it (like severities).\n  format none\n  path /var/log/etcd.log\n
    \ pos_file /var/log/fluentd-etcd.log.pos\n  tag etcd\n</source>\n\n# Multi-line
    parsing is required for all the kube logs because very large log\n# statements,
    such as those that include entire object bodies, get split into\n# multiple lines
    by glog.\n\n# Example:\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/:
    (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\n<source>\n  type tail\n
    \ format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n
    \ format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^
    \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kubelet.log\n
    \ pos_file /var/log/fluentd-kubelet.log.pos\n  tag kubelet\n</source>\n\n# Example:\n#
    I1118 21:26:53.975789       6 proxier.go:1096] Port \"nodePort for kube-system/default-http-backend:http\"
    (:31429/tcp) was open before and is still needed\n<source>\n  type tail\n  format
    multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1
    /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\]
    (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-proxy.log\n
    \ pos_file /var/log/fluentd-kube-proxy.log.pos\n  tag kube-proxy\n</source>\n\n#
    Example:\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes:
    (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50]
    127.0.0.1:38266]\n<source>\n  type tail\n  format multiline\n  multiline_flush_interval
    5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4}
    [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format
    %m%d %H:%M:%S.%N\n  path /var/log/kube-apiserver.log\n  pos_file /var/log/fluentd-kube-apiserver.log.pos\n
    \ tag kube-apiserver\n</source>\n\n# Example:\n# I0204 06:55:31.872680       5
    servicecontroller.go:277] LB already exists and doesn't need update for service
    kube-system/kube-ui\n<source>\n  type tail\n  format multiline\n  multiline_flush_interval
    5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4}
    [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format
    %m%d %H:%M:%S.%N\n  path /var/log/kube-controller-manager.log\n  pos_file /var/log/fluentd-kube-controller-manager.log.pos\n
    \ tag kube-controller-manager\n</source>\n\n# Example:\n# W0204 06:49:18.239674
    \      7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service
    ended with: 401: The event in requested index is outdated and cleared (the requested
    history has been cleared [2578313/2577886]) [2579312]\n<source>\n  type tail\n
    \ format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n
    \ format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^
    \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-scheduler.log\n
    \ pos_file /var/log/fluentd-kube-scheduler.log.pos\n  tag kube-scheduler\n</source>\n\n#
    Example:\n# I1104 10:36:20.242766       5 rescheduler.go:73] Running Rescheduler\n<source>\n
    \ type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline
    /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^
    \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/rescheduler.log\n
    \ pos_file /var/log/fluentd-rescheduler.log.pos\n  tag rescheduler\n</source>\n\n#
    Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config
    from path /etc/gce.conf\n<source>\n  type tail\n  format multiline\n  multiline_flush_interval
    5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4}
    [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format
    %m%d %H:%M:%S.%N\n  path /var/log/glbc.log\n  pos_file /var/log/fluentd-glbc.log.pos\n
    \ tag glbc\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230]
    Reading config from path /etc/gce.conf\n<source>\n  type tail\n  format multiline\n
    \ multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4}
    [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format
    %m%d %H:%M:%S.%N\n  path /var/log/cluster-autoscaler.log\n  pos_file /var/log/fluentd-cluster-autoscaler.log.pos\n
    \ tag cluster-autoscaler\n</source>\n\n<match kube.kube-system.**>\n   @type s3\n
    \  log_level info\n   s3_bucket \"#{ENV['AWS_S3_BUCKET_NAME']}\"\n   s3_region
    \"#{ENV['AWS_S3_LOGS_BUCKET_REGION']}\"\n   s3_object_key_format %{path}%{time_slice}/cluster-log-%{index}.%{file_extension}\n
    \  \n   path \"#{ENV['AWS_S3_LOGS_BUCKET_PREFIX_KUBESYSTEM']}\"\n   buffer_path
    /var/log/fluentd-buffer-kubesystem\n   store_as json\n   use_server_side_encryption
    aws:kms\n   flush_interval 60s\n\n   time_slice_format %Y/%m/%d\n   time_slice_wait
    10m\n   utc\n\n   <instance_profile_credentials>\n     ip_address 169.254.169.254\n
    \    port       80b\n   </instance_profile_credentials>\n</match>\n\n<match **>\n
    \  @type s3\n   log_level info\n   s3_bucket \"#{ENV['AWS_S3_BUCKET_NAME']}\"\n
    \  s3_region \"#{ENV['AWS_S3_LOGS_BUCKET_REGION']}\"\n   s3_object_key_format
    %{path}%{time_slice}/cluster-log-%{index}.%{file_extension}\n   \n   path \"#{ENV['AWS_S3_LOGS_BUCKET_PREFIX']}\"\n
    \  buffer_path /var/log/fluentd-buffer\n   store_as json\n   use_server_side_encryption
    aws:kms\n   flush_interval 60s\n\n   time_slice_format %Y/%m/%d\n   time_slice_wait
    10m\n   utc\n\n   <instance_profile_credentials>\n     ip_address 169.254.169.254\n
    \    port       80b\n   </instance_profile_credentials>\n</match>\n\n<match fluent.**>\n
    \ type file\n  path /var/log/fluentd.log\n</match>\n"
kind: ConfigMap
metadata:
  creationTimestamp: "2022-01-21T14:15:11Z"
  name: fluentd-conf
  namespace: kube-system
  resourceVersion: "37823749"
  uid: a66a4995-2285-427e-aa19-34045e46f2cd


---


apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-logging
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: fluentd-logging
      containers:
      - name: fluentd
        image: upmcenterprises/fluentd:0.0.2
        imagePullPolicy: Always
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi

        env:
        - name: AWS_S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: fluentd-conf
              key: AWS_S3_BUCKET_NAME
        - name: AWS_S3_LOGS_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: fluentd-conf
              key: AWS_S3_LOGS_BUCKET_PREFIX
        - name: AWS_S3_LOGS_BUCKET_REGION
          valueFrom:
            configMapKeyRef:
              name: fluentd-conf
              key: AWS_S3_LOGS_BUCKET_REGION
        - name: AWS_S3_LOGS_BUCKET_PREFIX_KUBESYSTEM
          valueFrom:
            configMapKeyRef:
              name: fluentd-conf
              key: AWS_S3_LOGS_BUCKET_PREFIX_KUBESYSTEM
        args:
        - --use-v1-config
        - -qq
        securityContext:
          privileged: true
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-conf-volume
          mountPath: /fluentd/etc
      tolerations:
      - key: "master"
        operator: "Exists"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-conf
        configMap:
          name: fluentd-conf
      - name: fluentd-conf-volume
        configMap:
          name: fluentd-conf
          items:
          - key: fluent_s3.conf
            path: fluent.conf









